//! Do not edit this file manually, it is generate by `prisma repo generator`

import { Prisma, PrismaClient, RosesCMS } from '@prisma/client';
import _ from 'lodash';

// eslint-disable-next-line @typescript-eslint/no-explicit-any
export type AnyRecord = Record<string, any>;

export type BaseOption<Include, Select> = {
  include?: Include;
  select?: Select;
};

export type Find<Select, Include, Cursor, Order, Distinct> = BaseOption<Include, Select> & {
  cursor?: Cursor;
  take?: number;
  skip?: number;
  orderBy?: Prisma.Enumerable<Order>;
  distinct?: Distinct;
};

export type CountArgs<Select, Cursor, Order, Distinct> = Omit<
  Find<Select, never, Cursor, Order, Distinct>,
  'include'
>;

export type Aggregate<Cursor, Order, Distinct> = Omit<
  CountArgs<never, Cursor, Order, Distinct>,
  'select' | 'distinct'
>;

export const prisma = new PrismaClient({
  log: ['query', 'info', 'warn', 'error'],
});

export const models = _.omit(prisma, [
  '$on',
  '$connect',
  '$disconnect',
  '$use',
  '$executeRaw',
  '$executeRawUnsafe',
  '$queryRaw',
  '$queryRawUnsafe',
  '$transaction',
]);

export const MODELS_NAME = {
  ROSES_CMS: 'rosesCms',
} as const;

// eslint-disable-next-line @typescript-eslint/ban-types
export type ModelStructure = {
  rosesCms: RosesCMS;
};

export type ModelName = keyof ModelStructure;

export type ModelScalarFields<T extends keyof ModelStructure> = Prisma.Enumerable<keyof ModelStructure[T]>;

export type ModelDelegate = Prisma.RejectOnNotFound | Prisma.RejectPerOperation | undefined;

export type ModelTypes = {
  rosesCms: {
    Where: Prisma.RosesCMSWhereInput;
    Select: Prisma.RosesCMSSelect;
    Include: unknown;
    Create: Prisma.RosesCMSCreateInput | Prisma.RosesCMSUncheckedCreateInput;
    Update: Prisma.RosesCMSUpdateInput | Prisma.RosesCMSUncheckedUpdateInput;
    Cursor: Prisma.RosesCMSWhereUniqueInput;
    Order: Prisma.RosesCMSOrderByWithRelationInput;
    Delegate: Prisma.RosesCMSDelegate<ModelDelegate>;
  };
};
